/*
 * Peteq API
 *
 * Peteq OpenAPI spec.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TaskDeleteTaskRequestBody struct for TaskDeleteTaskRequestBody
type TaskDeleteTaskRequestBody struct {
	Id *string `json:"id,omitempty"`
}

// NewTaskDeleteTaskRequestBody instantiates a new TaskDeleteTaskRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskDeleteTaskRequestBody() *TaskDeleteTaskRequestBody {
	this := TaskDeleteTaskRequestBody{}
	return &this
}

// NewTaskDeleteTaskRequestBodyWithDefaults instantiates a new TaskDeleteTaskRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskDeleteTaskRequestBodyWithDefaults() *TaskDeleteTaskRequestBody {
	this := TaskDeleteTaskRequestBody{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskDeleteTaskRequestBody) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskDeleteTaskRequestBody) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskDeleteTaskRequestBody) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TaskDeleteTaskRequestBody) SetId(v string) {
	o.Id = &v
}

func (o TaskDeleteTaskRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableTaskDeleteTaskRequestBody struct {
	value *TaskDeleteTaskRequestBody
	isSet bool
}

func (v NullableTaskDeleteTaskRequestBody) Get() *TaskDeleteTaskRequestBody {
	return v.value
}

func (v *NullableTaskDeleteTaskRequestBody) Set(val *TaskDeleteTaskRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskDeleteTaskRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskDeleteTaskRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskDeleteTaskRequestBody(val *TaskDeleteTaskRequestBody) *NullableTaskDeleteTaskRequestBody {
	return &NullableTaskDeleteTaskRequestBody{value: val, isSet: true}
}

func (v NullableTaskDeleteTaskRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskDeleteTaskRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


