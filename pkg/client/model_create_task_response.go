/*
 * Peteq API
 *
 * Peteq OpenAPI spec.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CreateTaskResponse struct for CreateTaskResponse
type CreateTaskResponse struct {
	Description *string `json:"description,omitempty"`
	List *string `json:"list,omitempty"`
	Name string `json:"name"`
	Project *string `json:"project,omitempty"`
}

// NewCreateTaskResponse instantiates a new CreateTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskResponse(name string, ) *CreateTaskResponse {
	this := CreateTaskResponse{}
	this.Name = name
	return &this
}

// NewCreateTaskResponseWithDefaults instantiates a new CreateTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskResponseWithDefaults() *CreateTaskResponse {
	this := CreateTaskResponse{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTaskResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTaskResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTaskResponse) SetDescription(v string) {
	o.Description = &v
}

// GetList returns the List field value if set, zero value otherwise.
func (o *CreateTaskResponse) GetList() string {
	if o == nil || o.List == nil {
		var ret string
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskResponse) GetListOk() (*string, bool) {
	if o == nil || o.List == nil {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *CreateTaskResponse) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given string and assigns it to the List field.
func (o *CreateTaskResponse) SetList(v string) {
	o.List = &v
}

// GetName returns the Name field value
func (o *CreateTaskResponse) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTaskResponse) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTaskResponse) SetName(v string) {
	o.Name = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *CreateTaskResponse) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskResponse) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *CreateTaskResponse) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *CreateTaskResponse) SetProject(v string) {
	o.Project = &v
}

func (o CreateTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTaskResponse struct {
	value *CreateTaskResponse
	isSet bool
}

func (v NullableCreateTaskResponse) Get() *CreateTaskResponse {
	return v.value
}

func (v *NullableCreateTaskResponse) Set(val *CreateTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskResponse(val *CreateTaskResponse) *NullableCreateTaskResponse {
	return &NullableCreateTaskResponse{value: val, isSet: true}
}

func (v NullableCreateTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


