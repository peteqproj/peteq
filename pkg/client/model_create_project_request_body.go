/*
 * Peteq API
 *
 * Peteq OpenAPI spec.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CreateProjectRequestBody struct for CreateProjectRequestBody
type CreateProjectRequestBody struct {
	Color *string `json:"color,omitempty"`
	Description *string `json:"description,omitempty"`
	ImageUrl *string `json:"imageUrl,omitempty"`
	Name string `json:"name"`
}

// NewCreateProjectRequestBody instantiates a new CreateProjectRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectRequestBody(name string, ) *CreateProjectRequestBody {
	this := CreateProjectRequestBody{}
	this.Name = name
	return &this
}

// NewCreateProjectRequestBodyWithDefaults instantiates a new CreateProjectRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectRequestBodyWithDefaults() *CreateProjectRequestBody {
	this := CreateProjectRequestBody{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CreateProjectRequestBody) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRequestBody) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CreateProjectRequestBody) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *CreateProjectRequestBody) SetColor(v string) {
	o.Color = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProjectRequestBody) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProjectRequestBody) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProjectRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *CreateProjectRequestBody) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRequestBody) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *CreateProjectRequestBody) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *CreateProjectRequestBody) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetName returns the Name field value
func (o *CreateProjectRequestBody) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateProjectRequestBody) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateProjectRequestBody) SetName(v string) {
	o.Name = v
}

func (o CreateProjectRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ImageUrl != nil {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProjectRequestBody struct {
	value *CreateProjectRequestBody
	isSet bool
}

func (v NullableCreateProjectRequestBody) Get() *CreateProjectRequestBody {
	return v.value
}

func (v *NullableCreateProjectRequestBody) Set(val *CreateProjectRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectRequestBody(val *CreateProjectRequestBody) *NullableCreateProjectRequestBody {
	return &NullableCreateProjectRequestBody{value: val, isSet: true}
}

func (v NullableCreateProjectRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


