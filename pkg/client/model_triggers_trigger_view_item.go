/*
 * Peteq API
 *
 * Peteq OpenAPI spec.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TriggersTriggerViewItem struct for TriggersTriggerViewItem
type TriggersTriggerViewItem struct {
	Description *string `json:"description,omitempty"`
	History *[]TriggersTriggerExecutionHistoryItem `json:"history,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Spec *map[string]interface{} `json:"spec,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewTriggersTriggerViewItem instantiates a new TriggersTriggerViewItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggersTriggerViewItem() *TriggersTriggerViewItem {
	this := TriggersTriggerViewItem{}
	return &this
}

// NewTriggersTriggerViewItemWithDefaults instantiates a new TriggersTriggerViewItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggersTriggerViewItemWithDefaults() *TriggersTriggerViewItem {
	this := TriggersTriggerViewItem{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TriggersTriggerViewItem) SetDescription(v string) {
	o.Description = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetHistory() []TriggersTriggerExecutionHistoryItem {
	if o == nil || o.History == nil {
		var ret []TriggersTriggerExecutionHistoryItem
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetHistoryOk() (*[]TriggersTriggerExecutionHistoryItem, bool) {
	if o == nil || o.History == nil {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasHistory() bool {
	if o != nil && o.History != nil {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []TriggersTriggerExecutionHistoryItem and assigns it to the History field.
func (o *TriggersTriggerViewItem) SetHistory(v []TriggersTriggerExecutionHistoryItem) {
	o.History = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TriggersTriggerViewItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TriggersTriggerViewItem) SetName(v string) {
	o.Name = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetSpec() map[string]interface{} {
	if o == nil || o.Spec == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetSpecOk() (*map[string]interface{}, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given map[string]interface{} and assigns it to the Spec field.
func (o *TriggersTriggerViewItem) SetSpec(v map[string]interface{}) {
	o.Spec = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TriggersTriggerViewItem) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggersTriggerViewItem) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TriggersTriggerViewItem) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TriggersTriggerViewItem) SetType(v string) {
	o.Type = &v
}

func (o TriggersTriggerViewItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.History != nil {
		toSerialize["history"] = o.History
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTriggersTriggerViewItem struct {
	value *TriggersTriggerViewItem
	isSet bool
}

func (v NullableTriggersTriggerViewItem) Get() *TriggersTriggerViewItem {
	return v.value
}

func (v *NullableTriggersTriggerViewItem) Set(val *TriggersTriggerViewItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggersTriggerViewItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggersTriggerViewItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggersTriggerViewItem(val *TriggersTriggerViewItem) *NullableTriggersTriggerViewItem {
	return &NullableTriggersTriggerViewItem{value: val, isSet: true}
}

func (v NullableTriggersTriggerViewItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggersTriggerViewItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


